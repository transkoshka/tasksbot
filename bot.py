from dotenv import load_dotenv
load_dotenv()

import os
import asyncio
import nest_asyncio
import requests
from telegram import Update
from telegram.ext import Application, ContextTypes, MessageHandler, filters

# üîê –í—Å—Ç–∞–≤—å —Å–≤–æ–∏ –∫–ª—é—á–∏
TELEGRAM_TOKEN = os.getenv("7735357077:AAGSWIyVysU5a4DK6F8Qsdl1EOpFIeeyMok")
WEBHOOK_URL = os.getenv("https://script.google.com/macros/s/AKfycbzhCvZDrcinAYHl5LYp-59a9l5PzYPRyOnI1JJXVNRO9yXBs8lJw3iT6T2KIY6flIkq/exec")

# üìú –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message_text = update.message.text.strip()

    if message_text.startswith("todo"):
        task_text = message_text.replace("todo", "").strip()
        try:
            response = requests.post(WEBHOOK_URL, json={"task": "–¥–æ–±–∞–≤—å –∑–∞–¥–∞—á—É: " + task_text})
            if response.status_code == 200:
                await update.message.reply_text("‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—É!")
            else:
                await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏. –ö–æ–¥: {response.status_code}")
        except Exception as e:
            await update.message.reply_text(f"üö´ –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
    else:
        await update.message.reply_text("üëÄ –Ø —Ä–µ–∞–≥–∏—Ä—É—é —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –≤–∏–¥–∞ `#–∑–∞–¥–∞—á–∞ ...`")

# üß† –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    app = Application.builder().token(TELEGRAM_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è...")
    await app.run_polling()

# üöÄ –ó–∞–ø—É—Å–∫
if __name__ == '__main__':
    nest_asyncio.apply()
    asyncio.get_event_loop().run_until_complete(main())
